// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.35.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../helper.dart';
import 'package:collection/collection.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<bool> isWord({required String word, dynamic hint}) =>
    RustLib.instance.api.crateApiComputeIsWord(word: word, hint: hint);

Future<String?> compute(
        {required List<RustLetterBoxArray5> state,
        required bool hardMode,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiComputeCompute(state: state, hardMode: hardMode, hint: hint);

class RustLetterBox {
  final String char;
  final Correctness state;

  const RustLetterBox({
    required this.char,
    required this.state,
  });

  @override
  int get hashCode => char.hashCode ^ state.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RustLetterBox &&
          runtimeType == other.runtimeType &&
          char == other.char &&
          state == other.state;
}

class RustLetterBoxArray5 extends NonGrowableListView<RustLetterBox> {
  static const arraySize = 5;

  @internal
  List<RustLetterBox> get inner => _inner;
  final List<RustLetterBox> _inner;

  RustLetterBoxArray5(this._inner)
      : assert(_inner.length == arraySize),
        super(_inner);

  RustLetterBoxArray5.init(RustLetterBox fill)
      : this(List<RustLetterBox>.filled(arraySize, fill));
}
